# Tox (https://tox.wiki/) is a tool for running tests in multiple
# virtualenvs. This configuration file will run the test suite on all
# supported python versions. To use it, run "tox" from this directory.
#
# For a specific environment, run:
#     "tox -e <env>" (i.e.: "tox -e py313" or "tox -e lint")
#
# This tox configuration will skip any Python interpreters that can't be found.
# To manage multiple Python interpreters for covering all versions, you can use
# pyenv: https://github.com/pyenv/pyenv


[tox]
envlist =
    validate
    lint
    py310
    py311
    py312
    py313
    py314
    pypy3
skip_missing_interpreters = true


[testenv:validate]
description = validate project configuration
dependency_groups =
    validate
commands =
    validate-pyproject pyproject.toml
    python -c "import bump_dependencies"
    bump_dependencies -h


[testenv:lint]
description = run linter and formatter
dependency_groups =
    lint
skip_install = true
commands =
    # crazy workaround so black doesn't print red messages to console on success
    {envpython} -c "import subprocess as s; import sys; "\
    "r = s.run(['black', 'src'], capture_output=True, text=True, encoding='utf-8'); "\
    "sys.stdout.write(r.stderr) if not r.returncode else sys.stderr.write(r.stderr)"
    ruff check --fix --show-fixes --exit-non-zero-on-fix src
    ruff format --exit-non-zero-on-format src
    refurb src


[testenv]
description = run tests
dependency_groups =
    test
commands =
    pytest {posargs:.}
